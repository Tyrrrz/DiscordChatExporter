using MaterialDesignThemes.Wpf

Window "DiscordChatExporter.Views.MainWindow" {
  DataContext: bind MainViewModel from $resource Locator
  Title: "DiscordChatExporter"
  Width: 620
  Height: 550
  Background: resource dyn "MaterialDesignPaper"
  WindowStartupLocation: CenterScreen
  UseLayoutRounding: true
  SnapsToDevicePixels: true
  FontFamily: resource dyn "MaterialDesignFont"
  TextElement.FontSize: 13
  TextElement.FontWeight: Regular
  TextElement.Foreground: resource dyn "SecondaryTextBrush"
  TextOptions.TextFormattingMode: Ideal
  TextOptions.TextRenderingMode: Auto
  FocusManager.FocusedElement: bind from "TokenTextBox"

  Grid {
    #ThreeRows("Auto", "*", "Auto")

    // Top
    Border {
      Grid.Row: 0
      Background: resource dyn "PrimaryHueMidBrush"
      TextElement.Foreground: resource dyn "SecondaryInverseTextBrush"
      StackPanel {
        Card {
          Margin: 5
          Grid {
            #TwoColumns("*", "Auto")

            // Token
            TextBox "TokenTextBox" {
              Grid.Column: 0
              Margin: 5
              BorderThickness: 0
              FontSize: 16
              HintAssist.Hint: "Token"
              KeyDown: TokenTextBox_KeyDown
              Text: bind Token
                    set [
                        UpdateSourceTrigger: PropertyChanged
                    ]
            }

            // Submit
            Button {
              Style: resource dyn "MaterialDesignFlatButton"
              Grid.Column: 1
              Margin: 5
              Padding: 4
              Command: bind PullChannelsCommand
              PackIcon {
                Width: 24
                Height: 24
                Kind: PackIconKind.ArrowRight
              }
            }
          }
        }

        // Progress
        ProgressBar {
          Background: Transparent
          IsIndeterminate: true
          Visibility: bind IsBusy
                           convert (bool b) => b ? Visibility.Visible : Visibility.Hidden
        }
      }
    }

    // Middle
    Grid {
      #TwoRows("*", "Auto")

      Grid.Row: 1

      // Channels
      StackPanel {
        Grid.Row: 0

        TextBlock {
          Margin: 5
          Text: "Channels"
        }
        ListBox {
          Margin: 5
          Resources: [
            CollectionViewSource Key="AvailableChannels" {
              Source: bind AvailableChannels
              GroupDescriptions: [
                PropertyGroupDescription { PropertyName: "GroupName" }
              ]
            }
          ]

          ItemsSource: bind from $resource AvailableChannels
          SelectedItem: bind SelectedChannel
          DisplayMemberPath: "Channel.Name"
          GroupStyle: GroupStyle {
            ContainerStyle: Style {
              TargetType: "GroupItem"
              Setter {
                Property: "Template"
                Value: ControlTemplate {
                  Expander {
                    Header: bind Name
                    ItemsPresenter { }
                  }
                }
              }
            }
          }
        }
      }

      // Options
      StackPanel {
        Grid.Row: 1

        // Theme
        TextBlock {
          Margin: 5
          Text: "Theme"
        }
        ComboBox {
          Margin: 5
          ItemsSource: bind AvailableThemes
          SelectedItem: bind SelectedTheme
        }
      }
    }

    // Bottom
    Border {
      Grid.Row: 2

      // Convert
      Button {
        Margin: 5
        Command: bind ExportChatLogCommand
        Content: "EXPORT"
      } 
    }
  }
}