<UserControl
    x:Class="DiscordChatExporter.Gui.Views.Dialogs.ExportSetupView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:DiscordChatExporter.Gui.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dialogs="clr-namespace:DiscordChatExporter.Gui.ViewModels.Dialogs"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="https://github.com/canton7/Stylet"
    Width="380"
    d:DataContext="{d:DesignInstance Type=dialogs:ExportSetupViewModel}"
    Style="{DynamicResource MaterialDesignRoot}"
    mc:Ignorable="d">
    <StackPanel>
        <!--  Guild/channel info  -->
        <Grid Margin="16">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!--  Guild icon  -->
            <Ellipse
                Grid.Column="0"
                Width="32"
                Height="32">
                <Ellipse.Fill>
                    <ImageBrush ImageSource="{Binding Guild.IconUrl}" />
                </Ellipse.Fill>
            </Ellipse>

            <!--  Placeholder (for multiple channels)  -->
            <TextBlock
                Grid.Column="1"
                Margin="8,0,0,0"
                VerticalAlignment="Center"
                FontSize="19"
                TextTrimming="CharacterEllipsis"
                Visibility="{Binding IsSingleChannel, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}">
                <Run Text="{Binding Channels.Count, Mode=OneWay}" />
                <Run Text="channels selected" />
            </TextBlock>

            <!--  Category and channel name (for single channel)  -->
            <TextBlock
                Grid.Column="1"
                Margin="8,0,0,0"
                VerticalAlignment="Center"
                FontSize="19"
                TextTrimming="CharacterEllipsis"
                Visibility="{Binding IsSingleChannel, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                <Run Text="{Binding Channels[0].Category, Mode=OneWay}" ToolTip="{Binding Channels[0].Category, Mode=OneWay}" />
                <Run Text="/" />
                <Run
                    Foreground="{DynamicResource PrimaryTextBrush}"
                    Text="{Binding Channels[0].Name, Mode=OneWay}"
                    ToolTip="{Binding Channels[0].Name, Mode=OneWay}" />
            </TextBlock>
        </Grid>

        <!--  Format  -->
        <ComboBox
            Margin="16,8"
            materialDesign:HintAssist.Hint="Format"
            materialDesign:HintAssist.IsFloating="True"
            IsReadOnly="True"
            ItemsSource="{Binding AvailableFormats}"
            SelectedItem="{Binding SelectedFormat}">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Converter={x:Static converters:ExportFormatToStringConverter.Instance}}" />
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>

        <!--  Advanced section  -->
        <StackPanel Visibility="{Binding IsChecked, ElementName=AdvancedSectionToggleButton, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
            <!--  Date limits  -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <DatePicker
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="16,8"
                    materialDesign:HintAssist.Hint="From (optional)"
                    materialDesign:HintAssist.IsFloating="True"
                    DisplayDateEnd="{Binding Before, Converter={x:Static converters:DateTimeOffsetToDateTimeConverter.Instance}}"
                    SelectedDate="{Binding After, Converter={x:Static converters:DateTimeOffsetToDateTimeConverter.Instance}}"
                    ToolTip="If this is set, only messages sent after this date will be exported" />
                <DatePicker
                    Grid.Row="0"
                    Grid.Column="1"
                    Margin="16,8"
                    materialDesign:HintAssist.Hint="To (optional)"
                    materialDesign:HintAssist.IsFloating="True"
                    DisplayDateStart="{Binding After, Converter={x:Static converters:DateTimeOffsetToDateTimeConverter.Instance}}"
                    SelectedDate="{Binding Before, Converter={x:Static converters:DateTimeOffsetToDateTimeConverter.Instance}}"
                    ToolTip="If this is set, only messages sent before this date will be exported" />
            </Grid>

            <!--  Partitioning  -->
            <TextBox
                Margin="16,8"
                materialDesign:HintAssist.Hint="Messages per partition (optional)"
                materialDesign:HintAssist.IsFloating="True"
                Text="{Binding PartitionLimit, TargetNullValue=''}"
                ToolTip="If this is set, the exported file will be split into multiple partitions, each containing no more than specified number of messages" />

            <!--  Download media  -->
            <Grid Margin="16,16" ToolTip="If this is set, the export will include additional files such as user avatars, attached files, embedded images, etc">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock
                    Grid.Column="0"
                    VerticalAlignment="Center"
                    Text="Download referenced media content" />
                <ToggleButton
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    IsChecked="{Binding ShouldDownloadMedia}" />
            </Grid>
        </StackPanel>

        <!--  Buttons  -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <ToggleButton
                x:Name="AdvancedSectionToggleButton"
                Grid.Column="0"
                Margin="8"
                Cursor="Hand"
                Loaded="AdvancedSectionToggleButton_OnLoaded"
                Style="{DynamicResource MaterialDesignFlatToggleButton}"
                ToolTip="Show advanced options">
                <ToggleButton.Content>
                    <materialDesign:PackIcon
                        Width="24"
                        Height="24"
                        Kind="Menu" />
                </ToggleButton.Content>
            </ToggleButton>

            <Button
                Grid.Column="2"
                Margin="8"
                Command="{s:Action Confirm}"
                Content="EXPORT"
                IsDefault="True"
                Style="{DynamicResource MaterialDesignFlatButton}" />
            <Button
                Grid.Column="3"
                Margin="8"
                Command="{s:Action Close}"
                Content="CANCEL"
                IsCancel="True"
                Style="{DynamicResource MaterialDesignFlatButton}" />
        </Grid>
    </StackPanel>
</UserControl>