using MaterialDesignThemes.Wpf

Window "DiscordChatExporter.Views.MainWindow" {
  DataContext: bind MainViewModel from $resource Locator
  Title: "DiscordChatExporter"
  Width: 620
  Height: 550
  Background: resource dyn "MaterialDesignPaper"
  WindowStartupLocation: CenterScreen
  UseLayoutRounding: true
  SnapsToDevicePixels: true
  FontFamily: resource dyn "MaterialDesignFont"
  TextElement.FontSize: 13
  TextElement.FontWeight: Regular
  TextElement.Foreground: resource dyn "SecondaryTextBrush"
  TextOptions.TextFormattingMode: Ideal
  TextOptions.TextRenderingMode: Auto
  FocusManager.FocusedElement: bind from "TokenTextBox"

  DialogHost {
    Grid {
      #ThreeRows("Auto", "*", "Auto")

      // Top
      Border {
        Grid.Row: 0
        Background: resource dyn "PrimaryHueMidBrush"
        TextElement.Foreground: resource dyn "SecondaryInverseTextBrush"
        StackPanel {
          Card {
            Margin: 5
            Grid {
              #TwoColumns("*", "Auto")

              // Token
              TextBox "TokenTextBox" {
                Grid.Column: 0
                Margin: 5
                BorderThickness: 0
                FontSize: 16
                HintAssist.Hint: "Token"
                KeyDown: TokenTextBox_KeyDown
                Text: bind Token
                      set [
                          UpdateSourceTrigger: PropertyChanged
                      ]
              }

              // Submit
              Button {
                Style: resource dyn "MaterialDesignFlatButton"
                Grid.Column: 1
                Margin: 5
                Padding: 4
                Command: bind PullChannelsCommand
                PackIcon {
                  Width: 24
                  Height: 24
                  Kind: PackIconKind.ArrowRight
                }
              }
            }
          }

          // Progress
          ProgressBar {
            Background: Transparent
            IsIndeterminate: true
            Visibility: bind IsBusy
                             convert (bool b) => b ? Visibility.Visible : Visibility.Hidden
          }
        }
      }

      // Middle
      Grid {
        Grid.Row: 1
        #TwoColumns("*", "*")
        IsEnabled: bind IsBusy
                   convert (bool b) => b ? false : true

        // Guilds
        DockPanel {
          Grid.Column: 0
          Visibility: bind AnyAvailableGuilds
                      convert (bool b) => b ? Visibility.Visible : Visibility.Hidden
          Style: Style {
            TargetType: "DockPanel"
            #FadeIn_OnProperty("Visibility", Visibility.Visible, 0, 1, "0:0:0.25")
          }

          TextBlock {
            DockPanel.Dock: Top
            Margin: "10 15 10 0"
            FontWeight: SemiBold
            Text: "Guilds"
          }

          Card {
            Margin: "5 5 3 5"
            VerticalAlignment: Stretch
            ShadowAssist.ShadowDepth: Depth1

            ListBox {
              ItemsSource: bind AvailableGuilds
              SelectedItem: bind SelectedGuild
              ItemTemplate: DataTemplate {
                DockPanel {
                  Image {
                    DockPanel.Dock: Left
                    Source: bind IconUrl
                    Width: 16
                    Height: 16
                  }

                  TextBlock {
                    DockPanel.Dock: Right
                    Padding: "5 0 5 0"
                    Text: bind Name
                  }
                }
              }
            }  
          }
          
        }
        

        // Channels
        DockPanel {
          Grid.Column: 1
          Visibility: bind AnyAvailableChannels
                      convert (bool b) => b ? Visibility.Visible : Visibility.Hidden
          Style: Style {
            TargetType: "DockPanel"
            #FadeIn_OnProperty("Visibility", Visibility.Visible, 0, 1, "0:0:0.25")
          }

          TextBlock {
            DockPanel.Dock: Top
            Margin: "10 15 10 0"
            FontWeight: SemiBold
            Text: "Channels"
          }

          Card {
            Margin: "3 5 5 5"
            VerticalAlignment: Stretch
            ShadowAssist.ShadowDepth: Depth1

            ListBox {
              ItemsSource: bind AvailableChannels
              SelectedItem: bind SelectedChannel
              ItemTemplate: DataTemplate {
                TextBlock {
                  Padding: "10 0 5 0"
                  Text: bind Name
                }
              }
            }  
          }
          
        }
      }

      // Bottom
      DockPanel {
        Grid.Row: 2
        LastChildFill: false

        // Help
        Button {
          Style: resource dyn "MaterialDesignFlatButton"
          DockPanel.Dock: Left
          Padding: 4
          Margin: "5 5 0 5"
          Command: bind ShowHelpCommand
          ToolTip: "Usage guide"
          PackIcon {
            Kind: PackIconKind.HelpCircle
            Width: 24
            Height: 24
          }
        }

        // Settings
        Button "ShowSettingsButton" {
          Style: resource dyn "MaterialDesignFlatButton"
          DockPanel.Dock: Left
          Padding: 4
          Margin: "0 5 5 5"
          Click: ShowSettingsButton_Click
          ToolTip: "Settings"
          PackIcon {
            Kind: PackIconKind.Settings
            Width: 24
            Height: 24
          }
        }

        // Convert
        Button {
          DockPanel.Dock: Right
          Margin: 5
          Command: bind ExportChatLogCommand
          ToolTip: "Save selected channel's messages"
          Content: "EXPORT"
        }
      }
    }
  }
}